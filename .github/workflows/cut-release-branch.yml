name: Cut Release Branch

on:
  workflow_dispatch:
    inputs:
      version:
        description: Bump version on main to the next
        required: true
        type: choice
        options:
          - minor
          - major
        default: minor

jobs:
  run:
    name: Cut Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main
        token: ${{ secrets.TAMANU_RELEASE_PAT }}

    - name: Set up committer info
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - name: Compute new release branch name
      uses: actions/github-script@v7
      id: branchname
      with:
        github-token: ${{ secrets.TAMANU_RELEASE_PAT }}
        result-encoding: string
        script: |
          const cwd = '${{ github.workspace }}';
          const { currentVersion } = await import(`${cwd}/scripts/gha-release-ops.mjs`);
          return currentVersion(await import('fs'), cwd).branch;

    - name: Check new release branch doesn't already exist
      uses: actions/github-script@v7
      env:
        NEW_BRANCH_NAME: ${{ steps.branchname.outputs.result }}
      with:
        github-token: ${{ secrets.TAMANU_RELEASE_PAT }}
        script: |
          const cwd = '${{ github.workspace }}';
          const { checkBranchDoesNotExist } = await import(`${cwd}/scripts/gha-release-ops.mjs`);
          await checkBranchDoesNotExist(github, context, process.env.NEW_BRANCH_NAME);

    - name: Create new release branch
      env:
        NEW_BRANCH_NAME: ${{ steps.branchname.outputs.result }}
      run: |
        set -ex
        git switch --create "$NEW_BRANCH_NAME"
        git commit --allow-empty -m "release: Cut-off for $NEW_BRANCH_NAME"
        git push origin "$NEW_BRANCH_NAME"
        git switch main

    - name: Bump version on main
      run: node scripts/version.mjs '${{ inputs.version }}'

    - name: Commit and push
      run: |
        set -ex
        version=$(jq -r .version package.json)
        git commit -am "release: Bump version to $version"
        git push
