- name: tamanu does
  type: serial
  encrypted_dockercfg_path: dockercfg.encrypted
  steps:
    - name: copy files
      service: app-without-db
      command: /pre/scripts/copy_files.sh
    - name: install dependencies
      service: app-without-db
      command: scripts/build_shared.sh
    - name: run migrations
      service: app-with-db
      command: scripts/apply_and_revert_sync_server_migrations.sh
    - name: hygiene checks (on PR branches)
      type: parallel
      exclude: ^(master$|dev$|staging-|ci-|uat-)
      steps:
        - name: lint desktop app and servers
          service: app-without-db
          command: scripts/lint.sh pr-lints
        - name: ensure storybook builds
          service: app-without-db
          command: "yarn workspace desktop run verify-storybook"
        # - TODO(WAITM-215): mobile lints
    - name: test
      type: serial
      steps:
        - name: the desktop app and servers
          service: app-with-db
          type: parallel
          steps:
            - name: on main branches
              command: scripts/test.sh
              tag: ^(master$|dev$|staging-|ci-|uat-)
            - name: on PR branches
              command: scripts/test.sh pr-coverage
              exclude: ^(master$|dev$|staging-|ci-|uat-)
        - name: the mobile app
          service: mobile
          command: "yarn test:coverage"
    - name: fix ssh for builds
      tag: ^(master$|dev$|staging-|ci-|uat-)
      service: app-without-db
      command: /pre/scripts/fix_ssh.sh
    - name: build packages
      tag: ^(master$|dev$|staging-|ci-|uat-)
      type: parallel
      steps:
        - name: for lan
          tag: ^(master$|dev$|staging-|ci-|uat-)
          service: app-without-db
          command: ./scripts/build_package_release.sh lan
        - name: for desktop installer
          service: app-without-db
          tag: ^(master$|dev$|staging-|ci-|uat-)
          command: ./scripts/build_desktop.sh build-only
        - name: for sync release
          tag: ^(master$|dev$|staging-|ci-|uat-)
          service: app-without-db
          command: ./scripts/build_package_release.sh sync-server
        - name: for meta release
          tag: ^(master$|dev$|staging-|ci-|uat-)
          service: app-without-db
          command: ./scripts/build_package_release.sh meta-server
    - name: push and deploy
      tag: ^(master$|dev$|staging-|ci-|uat-|release-desktop-)
      type: parallel
      steps:
        - name: the desktop installer
          service: app-without-db
          tag: ^(release-desktop-)
          command: ./scripts/build_desktop.sh build-and-release
        - name: all artefacts to s3
          service: awsdeployment
          tag: ^(master$|dev$|staging-|ci-|uat-)
          command: ./scripts/push.sh
        # the following serial steps are a fix for a bug where version names can
        # collide if an application is deployed in parallel
        # see https://github.com/codeship-library/aws-utilities/issues/115
        - name: the sync server
          tag: ^(master$|dev$|staging-|ci-|uat-)
          type: serial
          steps:
            - name: onto dev
              tag: ^(dev$|ci-)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh dev tamanu-central-server-dev-16
            - name: onto uat
              tag: ^uat-
              service: awsdeployment
              command: ./scripts/deploy_sync.sh uat-fiji-vps tamanu-sync-server-uat-fiji-vps
            - name: onto staging
              tag: ^(staging-)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh staging tamanu-central-server-staging-16
            - name: onto demo
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh demo tamanu-sync-server-demo
            - name: onto nauru demo
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh demo-nauru tamanu-sync-server-demo-nauru
            - name: onto palau demo
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_sync.sh demo-palau tamanu-sync-server-demo-palau
        - name: the lan server
          tag: ^(master$|dev$|staging-|ci-|uat-)
          type: serial
          steps:
            - name: onto dev A
              tag: ^(dev$|ci-)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh dev tamanu-facility-server-dev-16a
            - name: onto dev B
              tag: ^(dev$|ci-)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh dev tamanu-facility-server-dev-16b
            - name: onto uat
              tag: ^uat-
              service: awsdeployment
              command: ./scripts/deploy_lan.sh uat tamanu-lan-server-uat
            - name: onto staging A
              tag: ^(staging-)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh staging tamanu-facility-server-staging-16a
            - name: onto staging B
              tag: ^(staging-)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh staging tamanu-facility-server-staging-16b
            - name: onto demo
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh demo tamanu-lan-server-demo
            - name: onto nauru demo
              tag: ^(master$)
              service: awsdeployment
              command: ./scripts/deploy_lan.sh demo-nauru tamanu-lan-server-demo-nauru
        - name: the meta server
          tag: ^(dev$|ci-)
          type: serial
          steps:
            - name: onto dev
              tag: ^(dev$|ci-)
              service: awsdeployment
              command: ./scripts/deploy_meta.sh dev tamanu-meta-server-dev-16
            # meta production environment is deployed from dev so we can quickly add/remove features
            # TODO: revist whether this is a good idea at some later date
            - name: onto prod
              tag: ^dev$
              service: awsdeployment
              command: ./scripts/deploy_meta.sh prod tamanu-meta-server-prod-16
