app-without-db:
  cached: true
  default_cache_branch: dev
  build:
    # image name needs to be the same across both app- variants
    # otherwise the image busts its own cache and we lose the advantage
    image: tamanu-app
    context: .
    dockerfile: Dockerfile
  encrypted_env_file: codeship.env.encrypted
  volumes:
    - ./.tmp:/tamanu
    - ./.ssh:/root/.ssh
  environment:
    ELECTRON_CONFIG_CACHE: "$HOME/cache/electron"

app-with-db:
  cached: true
  default_cache_branch: dev
  build:
    image: tamanu-app
    context: .
    dockerfile: Dockerfile
  encrypted_env_file: codeship.env.encrypted
  volumes:
    - ./.tmp:/tamanu
  environment:
    ELECTRON_CONFIG_CACHE: "$HOME/cache/electron"
    NODE_CONFIG: '{"db":{"name":"postgres","host":"postgres","username":"postgres","password":"postgres"}}'
  depends_on:
    - postgres

awsdeployment:
  build:
    image: tamanu-deploy
    dockerfile: Dockerfile.deploy
  encrypted_env_file: codeship.env.encrypted
  cached: true
  default_cache_branch: dev
  volumes:
    - ./.tmp:/tamanu
    - ./.ssh:/root/.ssh

postgres:
  build:
    image: tamanu-postgres
    context: .
    dockerfile: packages/shared-src/docker/postgres/Dockerfile
  cached: true
  default_cache_branch: dev
  environment:
    - POSTGRES_DB=postgres
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    - 'POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C'

mobile:
  build:
    image: tamanu-mobile
    context: packages/mobile
    dockerfile: Dockerfile
  encrypted_dockercfg_path: packages/mobile/dockercfg.encrypted
